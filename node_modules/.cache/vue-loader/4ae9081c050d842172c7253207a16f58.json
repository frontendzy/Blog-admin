{"remainingRequest":"/Users/mac/Desktop/Blog/admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Desktop/Blog/admin/src/views/pages/article/Create.vue?vue&type=style&index=0&id=933845cc&scoped=true&lang=css&","dependencies":[{"path":"/Users/mac/Desktop/Blog/admin/src/views/pages/article/Create.vue","mtime":1600174559720},{"path":"/Users/mac/Desktop/Blog/admin/node_modules/css-loader/dist/cjs.js","mtime":1599720797977},{"path":"/Users/mac/Desktop/Blog/admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1599720798354},{"path":"/Users/mac/Desktop/Blog/admin/node_modules/postcss-loader/src/index.js","mtime":1597123373376},{"path":"/Users/mac/Desktop/Blog/admin/node_modules/cache-loader/dist/cjs.js","mtime":1599720796876},{"path":"/Users/mac/Desktop/Blog/admin/node_modules/vue-loader/lib/index.js","mtime":1599720798354}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKIC5hdmF0YXItdXBsb2FkZXIgLmVsLXVwbG9hZCB7CiAgYm9yZGVyOiAxcHggZGFzaGVkICNkOWQ5ZDk7CiAgYm9yZGVyLXJhZGl1czogNnB4OwogIGN1cnNvcjogcG9pbnRlcjsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKfQouYXZhdGFyLXVwbG9hZGVyIC5lbC11cGxvYWQ6aG92ZXIgewogIGJvcmRlci1jb2xvcjogIzQwOUVGRjsKfQouYXZhdGFyLXVwbG9hZGVyLWljb24gewogIGZvbnQtc2l6ZTogMjhweDsKICBjb2xvcjogIzhjOTM5ZDsKICB3aWR0aDogMTc4cHg7CiAgaGVpZ2h0OiAxNzhweDsKICBsaW5lLWhlaWdodDogMTc4cHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9Ci5hdmF0YXIgewogIHdpZHRoOiAxNzhweDsKICBoZWlnaHQ6IDE3OHB4OwogIGRpc3BsYXk6IGJsb2NrOwp9Cgo="},{"version":3,"sources":["Create.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Create.vue","sourceRoot":"src/views/pages/article","sourcesContent":["<template>\n  <div>\n    <h1>{{id ? '编辑' : '新建'}}文章</h1>\n    <el-form label-width=\"130px\" @submit.native.prevent=\"submit\">\n        <el-row>\n          <el-col :span=\"12\">\n            <div class=\"grid-content bg-purple-dark\">\n              <el-form-item label=\"文章标题:\">\n                <el-input style=\"width: 200px;\" type=\"text\" placeholder=\"请输入内容\" v-model=\"article.title\"></el-input>\n              </el-form-item>\n            </div>\n          </el-col>\n          <el-col :span=\"12\">\n            <div class=\"grid-content bg-purple-dark\">\n              <el-form-item label=\"分类:\">\n                <el-select v-model=\"article.belong\" placeholder=\"请选择\">\n                  <el-option \n                            v-for=\"item in belongs\" \n                            :key=\"item._id\" \n                            :label=\"item.name\" \n                            :value=\"item._id\"></el-option>\n                </el-select>\n              </el-form-item>\n            </div>\n          </el-col>\n        </el-row>\n\n      <el-form-item label=\"描述:\">\n        <el-input type=\"textarea\" autosize placeholder=\"请输入内容\" v-model=\"article.description\"></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"背景:\">\n        <el-upload\n          class=\"avatar-uploader\"\n          :action=\"uploadUrl\"\n          :headers=\"getAuthHeaders()\"\n          :show-file-list=\"false\"\n          :on-success=\"afterUpload\">\n          <img v-if=\"article.image\" :src=\"article.image\" class=\"avatar\">\n          <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n        </el-upload>\n      </el-form-item>\n\n      <el-form-item label=\"内容:\">\n        <mavon-editor v-model=\"article.body\" @imgAdd=\"$imgAdd\" ref=\"md\"/>\n      </el-form-item>\n\n      <el-form-item>\n        <el-button type=\"primary\" native-type=\"submit\">保存</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    id: {}\n  },\n  data() {\n    return {\n      article: {},\n      belongs: {}\n    }\n  },\n  methods: {\n    //获取文章信息\n    async fetch_article(){\n      const res = await this.$http.get(`rest/article/${this.id}`)\n      this.article = res.data\n    },\n    async fetch_belongs() {\n      const res = await this.$http.get('rest/classification')\n      this.belongs = res.data\n    },\n    afterUpload(res) {\n      this.$set(this.article, 'image', res.url)\n    },\n    async $imgAdd(pos, $file){\n        // 第一步.将图片上传到服务器.\n       const formdata = new FormData();\n       formdata.append('file', $file);\n       //网络请求\n       const res = await this.$http.post('upload', formdata)\n       // console.log(res);\n       this.$refs.md.$img2Url(pos, res.data.url);\n    },\n    async submit() {\n      let res\n      if(this.article !== ''){\n        if(this.id){\n        res = await this.$http.put(`rest/article/${this.id}`, this.article)\n      }else{\n        res = await this.$http.post('rest/article', this.article)\n      }\n      this.$router.push('/admin/article/list')\n        this.$message({\n          type: 'success',\n          message: '提交成功'\n        })\n      }else{\n        this.$message({\n          type: 'error',\n          message: '提交失败'\n        })\n      }\n    },\n  },\n  created() {\n    this.id && this.fetch_article();\n    this.fetch_belongs()\n  }\n}\n</script>\n\n<style scoped lang=\"css\">\n\n   .avatar-uploader .el-upload {\n    border: 1px dashed #d9d9d9;\n    border-radius: 6px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n  }\n  .avatar-uploader .el-upload:hover {\n    border-color: #409EFF;\n  }\n  .avatar-uploader-icon {\n    font-size: 28px;\n    color: #8c939d;\n    width: 178px;\n    height: 178px;\n    line-height: 178px;\n    text-align: center;\n  }\n  .avatar {\n    width: 178px;\n    height: 178px;\n    display: block;\n  }\n\n</style>\n"]}]}